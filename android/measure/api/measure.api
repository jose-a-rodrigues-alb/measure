public final class sh/measure/android/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public static final field MEASURE_SDK_VERSION Ljava/lang/String;
	public fun <init> ()V
}

public final class sh/measure/android/Measure {
	public static final field $stable I
	public static final field INSTANCE Lsh/measure/android/Measure;
	public static final fun clearUserId ()V
	public final fun createSpan (Ljava/lang/String;)Lsh/measure/android/tracing/SpanBuilder;
	public final fun getCurrentSpan ()Lsh/measure/android/tracing/Span;
	public final fun getTimestamp ()J
	public final fun getTraceParentHeaderKey ()Ljava/lang/String;
	public final fun getTraceParentHeaderValue (Lsh/measure/android/tracing/Span;)Ljava/lang/String;
	public static final fun init (Landroid/content/Context;)V
	public static final fun init (Landroid/content/Context;Lsh/measure/android/config/MeasureConfig;)V
	public static synthetic fun init$default (Landroid/content/Context;Lsh/measure/android/config/MeasureConfig;ILjava/lang/Object;)V
	public static final fun setUserId (Ljava/lang/String;)V
	public final fun startSpan (Ljava/lang/String;)Lsh/measure/android/tracing/Span;
	public final fun startSpan (Ljava/lang/String;J)Lsh/measure/android/tracing/Span;
	public final fun startSpan (Ljava/lang/String;JZ)Lsh/measure/android/tracing/Span;
	public final fun startSpan (Ljava/lang/String;Z)Lsh/measure/android/tracing/Span;
	public static final fun trackHandledException (Ljava/lang/Throwable;)V
	public static final fun trackNavigation (Ljava/lang/String;)V
	public static final fun trackNavigation (Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun trackNavigation$default (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun trackScreenView (Ljava/lang/String;)V
}

public final class sh/measure/android/config/MeasureConfig : sh/measure/android/config/IMeasureConfig {
	public static final field $stable I
	public fun <init> ()V
	public fun <init> (ZZLsh/measure/android/config/ScreenshotMaskLevel;ZZLjava/util/List;Ljava/util/List;Ljava/util/List;ZFF)V
	public synthetic fun <init> (ZZLsh/measure/android/config/ScreenshotMaskLevel;ZZLjava/util/List;Ljava/util/List;Ljava/util/List;ZFFILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getEnableLogging ()Z
	public fun getHttpHeadersBlocklist ()Ljava/util/List;
	public fun getHttpUrlAllowlist ()Ljava/util/List;
	public fun getHttpUrlBlocklist ()Ljava/util/List;
	public fun getScreenshotMaskLevel ()Lsh/measure/android/config/ScreenshotMaskLevel;
	public fun getSessionSamplingRate ()F
	public fun getTraceSamplingRate ()F
	public fun getTrackActivityIntentData ()Z
	public fun getTrackHttpBody ()Z
	public fun getTrackHttpHeaders ()Z
	public fun getTrackScreenshotOnCrash ()Z
}

public final class sh/measure/android/config/ScreenshotMaskLevel : java/lang/Enum {
	public static final field AllText Lsh/measure/android/config/ScreenshotMaskLevel;
	public static final field AllTextAndMedia Lsh/measure/android/config/ScreenshotMaskLevel;
	public static final field AllTextExceptClickable Lsh/measure/android/config/ScreenshotMaskLevel;
	public static final field SensitiveFieldsOnly Lsh/measure/android/config/ScreenshotMaskLevel;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lsh/measure/android/config/ScreenshotMaskLevel;
	public static fun values ()[Lsh/measure/android/config/ScreenshotMaskLevel;
}

public final class sh/measure/android/navigation/ComposeNavigationCollectorKt {
	public static final fun withMeasureNavigationListener (Landroidx/navigation/NavHostController;Landroidx/compose/runtime/Composer;I)Landroidx/navigation/NavHostController;
}

public final class sh/measure/android/okhttp/MeasureEventListenerFactory : okhttp3/EventListener$Factory {
	public static final field $stable I
	public fun <init> (Lokhttp3/EventListener$Factory;)V
	public fun create (Lokhttp3/Call;)Lokhttp3/EventListener;
}

public final class sh/measure/android/okhttp/MeasureOkHttpApplicationInterceptor : okhttp3/Interceptor {
	public static final field $stable I
	public fun <init> ()V
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public final class sh/measure/android/tracing/Checkpoint {
	public static final field $stable I
	public fun <init> (Ljava/lang/String;J)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getTimestamp ()J
	public fun hashCode ()I
}

public abstract interface class sh/measure/android/tracing/Scope : java/lang/AutoCloseable {
}

public abstract interface class sh/measure/android/tracing/Span {
	public static final field Companion Lsh/measure/android/tracing/Span$Companion;
	public abstract fun end ()Lsh/measure/android/tracing/Span;
	public abstract fun end (J)Lsh/measure/android/tracing/Span;
	public abstract fun getAttributes ()Ljava/util/Map;
	public abstract fun getCheckpoints ()Ljava/util/List;
	public abstract fun getDuration ()J
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getParentId ()Ljava/lang/String;
	public abstract fun getSessionId ()Ljava/lang/String;
	public abstract fun getSpanId ()Ljava/lang/String;
	public abstract fun getStartTime ()J
	public abstract fun getStatus ()Lsh/measure/android/tracing/SpanStatus;
	public abstract fun getTraceId ()Ljava/lang/String;
	public abstract fun hasEnded ()Z
	public abstract fun isSampled ()Z
	public abstract fun makeCurrent ()Lsh/measure/android/tracing/Scope;
	public abstract fun setCheckpoint (Ljava/lang/String;)Lsh/measure/android/tracing/Span;
	public abstract fun setParent (Lsh/measure/android/tracing/Span;)Lsh/measure/android/tracing/Span;
	public abstract fun setStatus (Lsh/measure/android/tracing/SpanStatus;)Lsh/measure/android/tracing/Span;
	public abstract fun withScope (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class sh/measure/android/tracing/Span$Companion {
}

public abstract interface class sh/measure/android/tracing/SpanBuilder {
	public abstract fun setNoParent ()Lsh/measure/android/tracing/SpanBuilder;
	public abstract fun setParent (Lsh/measure/android/tracing/Span;)Lsh/measure/android/tracing/SpanBuilder;
	public abstract fun startSpan ()Lsh/measure/android/tracing/Span;
	public abstract fun startSpan (J)Lsh/measure/android/tracing/Span;
}

public final class sh/measure/android/tracing/SpanStatus : java/lang/Enum {
	public static final field Error Lsh/measure/android/tracing/SpanStatus;
	public static final field Ok Lsh/measure/android/tracing/SpanStatus;
	public static final field Unset Lsh/measure/android/tracing/SpanStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lsh/measure/android/tracing/SpanStatus;
	public static fun values ()[Lsh/measure/android/tracing/SpanStatus;
}

